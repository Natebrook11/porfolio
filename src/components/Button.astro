---
interface Props {
    text: string;
    href: string;
    theme:string;
}

const { text, href , theme } = Astro.props;
---

<a class=`button ${theme}` href={href}>
    {text}
    <span class="button__icon-wrapper">
        <svg
            width="10"
            class="button__icon-svg"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 15"
        >
            <path
                fill="currentColor"
                d="M13.376 11.552l-.264-10.44-10.44-.24.024 2.28 6.96-.048L.2 12.56l1.488 1.488 9.432-9.432-.048 6.912 2.304.024z"
            ></path>
        </svg>

        <svg
            class="button__icon-svg button__icon-svg--copy"
            xmlns="http://www.w3.org/2000/svg"
            width="10"
            fill="none"
            viewBox="0 0 14 15"
        >
            <path
                fill="currentColor"
                d="M13.376 11.552l-.264-10.44-10.44-.24.024 2.28 6.96-.048L.2 12.56l1.488 1.488 9.432-9.432-.048 6.912 2.304.024z"
            ></path>
        </svg>
    </span>
</a>

<style>
    
    /* <------------- Styles -------------> */
    .dark{
        --dark:var(--secondary);
        --light:var(--text2);
    }

    .light{
        --dark:var(--primary);
        --light: var(--text);
    }

    
    /* <------------- Button -------------> */

    .button {
        line-height: 1;
        text-decoration: none;
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        gap: 0.75rem;
        border-radius: 10rem;
        font-family:'Inter' !important;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        background-color:var(--dark) ;
        color: var(--light);
        font-size: 16px !important;
        padding-left: 20px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-transition: background-color 0.3s;
        transition: background-color 0.3s;
    }

    .button__icon-wrapper {
        -ms-flex-negative: 0;
        flex-shrink: 0;
        width: 25px;
        height: 25px;
        position: relative;
        background-color:var(--light) ;
        color: var(--dark);
        border-radius: 50%;
        display: grid;
        place-items: center;
        overflow: hidden;

        -webkit-transition: transform 0.3s;
        transition: transform 0.3s;
    }

    .button:hover {
        background-color: var(--aux2);
    }

    .button:hover .button__icon-wrapper {
        color: var(--aux2);
        transform: rotate(45deg);
    }

    .button__icon-svg--copy {
        position: absolute;
        -webkit-transform: translate(-150%, 150%);
        -ms-transform: translate(-150%, 150%);
        transform: translate(-150%, 150%);
    }

    .button:hover .button__icon-svg:first-child {
        -webkit-transition: -webkit-transform 0.3s ease-in-out;
        transition: -webkit-transform 0.3s ease-in-out;
        transition: transform 0.3s ease-in-out;
        transition:
            transform 0.3s ease-in-out,
            -webkit-transform 0.3s ease-in-out;
        -webkit-transform: translate(150%, -150%);
        -ms-transform: translate(150%, -150%);
        transform: translate(150%, -150%);
    }

    .button:hover .button__icon-svg--copy {
        -webkit-transition: -webkit-transform 0.3s ease-in-out 0.1s;
        transition: -webkit-transform 0.3s ease-in-out 0.1s;
        transition: transform 0.3s ease-in-out 0.1s;
        transition:
            transform 0.3s ease-in-out 0.1s,
            -webkit-transform 0.3s ease-in-out 0.1s;
        -webkit-transform: translate(0);
        -ms-transform: translate(0);
        transform: translate(0);
    }
</style>
